{"version":3,"sources":["LoadingSpinner.js","MintPrice.js","App.js","Uniswap.js","index.js"],"names":["LoadingSpinner","props","className","isAbsolute","isEnabled","htmlParser","DOMParser","tabs","name","component","icoData","setIcoData","useState","priceHist","setPriceHist","time","setTime","Date","now","lastUpdate","setLastUpdate","isAlertAllowed","setIsAlertAllowed","isUpdating","setIsUpdating","updatePrice","async","neosResp","fetch","neosHtml","text","data","parseFromString","getElementById","querySelector","querySelectorAll","reduce","mapArr","article","childElementCount","articleData","header","firstElementChild","textContent","trim","content","lastElementChild","document","title","length","push","console","log","setTimeout","tick","useEffect","setInterval","map","row","rowIndex","category","index","style","display","minWidth","margin","humanizeDuration","round","size","onClick","msg","window","Notification","permission","requestPermission","then","alert","App","tabIndex","setTabIndex","md","tab","createElement","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.f2b1fc7a.chunk.js","sourcesContent":["const LoadingSpinner = (props) => {\r\n  return (\r\n    <div\r\n      className={`sk-cube-grid ${props.isAbsolute ? \"absolute\" : \"\"} ${\r\n        props.isEnabled ? \"enabled\" : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"sk-cube sk-cube1\"></div>\r\n      <div className=\"sk-cube sk-cube2\"></div>\r\n      <div className=\"sk-cube sk-cube3\"></div>\r\n      <div className=\"sk-cube sk-cube4\"></div>\r\n      <div className=\"sk-cube sk-cube5\"></div>\r\n      <div className=\"sk-cube sk-cube6\"></div>\r\n      <div className=\"sk-cube sk-cube7\"></div>\r\n      <div className=\"sk-cube sk-cube8\"></div>\r\n      <div className=\"sk-cube sk-cube9\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import { useEffect, useState } from \"react\";\r\nimport humanizeDuration from \"humanize-duration\";\r\nimport { Button, Card, CardBody, Col, Container, Row } from \"reactstrap\";\r\nimport LoadingSpinner from \"./LoadingSpinner\";\r\nconst apiProxy = \"https://salty-ravine-55027.herokuapp.com/https://neos.com/\";\r\nconst htmlParser = new DOMParser();\r\nconst updateInterval = 40000;\r\n\r\nconst MintPrice = (props) => {\r\n  const [icoData, setIcoData] = useState([]);\r\n  const [priceHist, setPriceHist] = useState(null);\r\n  const [time, setTime] = useState(Date.now());\r\n  const [lastUpdate, setLastUpdate] = useState(Date.now());\r\n  const [isAlertAllowed, setIsAlertAllowed] = useState(false);\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  const notifyUser = (msg) => {\r\n    if (!(\"Notification\" in window)) {\r\n      alert(\"This browser does not support desktop notifications\");\r\n    } else if (Notification.permission === \"granted\") {\r\n      setIsAlertAllowed(true);\r\n      new Notification(msg);\r\n    } else if (Notification.permission !== \"denied\") {\r\n      Notification.requestPermission().then((permission) => {\r\n        if (permission === \"granted\") {\r\n          new Notification(msg);\r\n        }\r\n      });\r\n    }\r\n  };\r\n  const updatePrice = async () => {\r\n    setIsUpdating(true);\r\n    const neosResp = await fetch(apiProxy);\r\n    const neosHtml = await neosResp.text();\r\n    const doc = htmlParser.parseFromString(neosHtml, \"text/html\");\r\n    const icoSect = doc.getElementById(\"ico\");\r\n    const innerIco = icoSect.querySelector(\".row > div > .row\");\r\n    const data = [...innerIco.querySelectorAll(\"article\")].reduce(\r\n      (mapArr, article) => {\r\n        if (article?.childElementCount !== 2) return mapArr;\r\n        const articleData = {\r\n          header: article.firstElementChild.textContent.trim(),\r\n          content: article.lastElementChild.textContent.trim()\r\n        };\r\n        if (articleData.header === \"NCR minting price:\") {\r\n          document.title = articleData.content;\r\n        }\r\n        if (\r\n          !mapArr[mapArr.length - 1] ||\r\n          mapArr[mapArr.length - 1].length > 1\r\n        ) {\r\n          mapArr.push([articleData]);\r\n        } else {\r\n          mapArr[mapArr.length - 1].push(articleData);\r\n        }\r\n        return mapArr;\r\n      },\r\n      []\r\n    );\r\n    console.log(data);\r\n    if (icoData.length && icoData[0].content !== data[0]?.content) {\r\n      setPriceHist(Date.now());\r\n    }\r\n    setIcoData(data);\r\n    setLastUpdate(Date.now());\r\n    setIsUpdating(false);\r\n    setTimeout(updatePrice, updateInterval);\r\n  };\r\n  const tick = () => setTime(Date.now());\r\n  useEffect(() => {\r\n    updatePrice();\r\n    setInterval(tick, 1000);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <LoadingSpinner isAbsolute isEnabled={isUpdating} />\r\n      {!!icoData.length &&\r\n        icoData.map((row, rowIndex) => (\r\n          <Row key={rowIndex} className=\"ico-row\">\r\n            {row.map((category, index) => (\r\n              <Col key={index} className=\"md-6 sm-12\">\r\n                <h5>{category.header}</h5>\r\n                <p>{category.content}</p>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        ))}\r\n      {!!icoData.length && (\r\n        <p className=\"text-muted mt-2\">\r\n          Last updated\r\n          <span\r\n            style={{\r\n              display: \"inline-block\",\r\n              minWidth: \"72px\",\r\n              margin: \"0 4px\"\r\n            }}\r\n          >\r\n            {humanizeDuration(time - lastUpdate, { round: true })}\r\n          </span>\r\n          ago\r\n        </p>\r\n      )}\r\n      {!!priceHist\r\n        ? `Mint price last changed ${humanizeDuration(time - priceHist, {\r\n            round: true\r\n          })} ago`\r\n        : !!icoData.length && \"Mint price has not changed since page load\"}\r\n      {!!icoData.length && !isAlertAllowed && (\r\n        <div className=\"mt-5\">\r\n          <Button\r\n            size=\"md\"\r\n            className=\"oxy-light\"\r\n            onClick={() => {\r\n              notifyUser(\r\n                \"You'll be notified like this when NCR mint price changes.\"\r\n              );\r\n            }}\r\n          >\r\n            Enable alerts\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MintPrice;\r\n","import \"./styles.css\";\nimport MintPrice from \"./MintPrice\";\nimport Uniswap from \"./Uniswap\";\nimport { Card, CardBody, Col, Container, Row } from \"reactstrap\";\nimport { createElement, useState } from \"react\";\n\nconst tabs = [\n  {\n    name: \"Mint\",\n    component: MintPrice\n  },\n  {\n    name: \"Uniswap\",\n    component: Uniswap\n  }\n];\n\nexport default function App() {\n  const [tabIndex, setTabIndex] = useState(0);\n  return (\n    <div className=\"App\">\n      <Container className=\"pb-5 oxy-light\">\n        <Row className=\"text-center\">\n          <Col md=\"12\">\n            <Card className=\"mt-5 p-3 text-light shadow main-card\">\n              <Row className=\"tabs-top\">\n                {tabs.map((tab, index) => (\n                  <Col\n                    key={index}\n                    className=\"tab\"\n                    onClick={() => setTabIndex(index)}\n                  >\n                    {tab.name}\n                  </Col>\n                ))}\n              </Row>\n              <CardBody>{createElement(tabs[tabIndex].component)}</CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n      <footer className=\"text-center text-muted mt-5 oxy-light\">\n        <p>WallTack#0001</p>\n      </footer>\n    </div>\n  );\n}\n","const Uniswap = () => {\r\n  return <div>placeholder tab - if you want this let me know</div>;\r\n};\r\n\r\nexport default Uniswap;\r\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./bootstrap.min.css\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}